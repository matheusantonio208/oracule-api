{
  "__export_date": "2022-06-05T23:01:27.444Z",
  "__export_format": 4,
  "__export_source": "insomnia.desktop.app:v2022.3.0",
  "_type": "export",
  "resources": [
    {
      "_id": "req_b1010b8299114e97b822056e1789e32e",
      "_type": "request",
      "authentication": {},
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"name\": \"Caneca Cerâmica \",\n\t\n\t\"synonyms\": [\"Percelana\"],\n\t\n\t\"variation\": \"Interior e Alça Branca\",\n\n  \"sku\": \"CCBR\",\n\n  \"material\": \"Cerâmica\",\n\n  \"ncm\": \"70139900\",\n\n  \"weight_in_grams\": 420\n}"
      },
      "created": 1654466981969,
      "description": "",
      "headers": [
        {
          "id": "pair_c3e9da51b8294374b494ac879af532f1",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "isPrivate": false,
      "metaSortKey": -1654020877244,
      "method": "POST",
      "modified": 1654469037711,
      "name": "store",
      "parameters": [],
      "parentId": "fld_ef3a0f6f86db40ffb40ea8593ea19726",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/feedstock/store"
    },
    {
      "_id": "fld_ef3a0f6f86db40ffb40ea8593ea19726",
      "_type": "request_group",
      "created": 1654466981968,
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1653867026019,
      "modified": 1654467806630,
      "name": "Feedstock",
      "parentId": "wrk_c43ea4ea84454464a10051aab19fdfb7"
    },
    {
      "_id": "wrk_c43ea4ea84454464a10051aab19fdfb7",
      "_type": "workspace",
      "created": 1653866992721,
      "description": "",
      "modified": 1653866992721,
      "name": "New Document",
      "parentId": null,
      "scope": "design"
    },
    {
      "_id": "req_4374d6cfbbce4f9ba5d73dd5f2f7dfc1",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654466981970,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1654020877194,
      "method": "GET",
      "modified": 1654468979788,
      "name": "index",
      "parameters": [
        {
          "description": "",
          "id": "pair_54efe603abb74872abfbb0592c1f9035",
          "name": ":id",
          "value": "123"
        },
        {
          "description": "",
          "id": "pair_01abe2e556a4496f95a7dd588fd49dbb",
          "name": ":teste",
          "value": "123"
        }
      ],
      "parentId": "fld_ef3a0f6f86db40ffb40ea8593ea19726",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/feedstock/index/{% pathParam ':id', '62967e9ff4f4870d50b60f82', '', true %}"
    },
    {
      "_id": "req_392fe1dec4ab4f6487c5f379b2d14169",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654466981972,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1653943934970.5,
      "method": "GET",
      "modified": 1654468974530,
      "name": "show",
      "parameters": [],
      "parentId": "fld_ef3a0f6f86db40ffb40ea8593ea19726",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/feedstock/show"
    },
    {
      "_id": "req_e6a87909d6bc403d82c198ef3b99711f",
      "_type": "request",
      "authentication": {},
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"parent_category\": null\n}"
      },
      "created": 1654466981974,
      "description": "",
      "headers": [
        {
          "id": "pair_0bd4dae705384638a4508cbb718f8cb8",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "isPrivate": false,
      "metaSortKey": -1653943934945.5,
      "method": "PUT",
      "modified": 1654469015428,
      "name": "update",
      "parameters": [],
      "parentId": "fld_ef3a0f6f86db40ffb40ea8593ea19726",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/feedstock/update/{% pathParam ':id', '62967e9ff4f4870d50b60f82', '', true %}"
    },
    {
      "_id": "req_88f1b7a6a11d4455925929465c1735f5",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654466981973,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1653943934920.5,
      "method": "DELETE",
      "modified": 1654469021550,
      "name": "delete",
      "parameters": [],
      "parentId": "fld_ef3a0f6f86db40ffb40ea8593ea19726",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/feedstock/delete/{% pathParam ':id', '629d30bfbc22d909280be852', '', true %}"
    },
    {
      "_id": "req_124ff5d42c52494aa72c7777c61a9fa8",
      "_type": "request",
      "authentication": {},
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"name\": \"Caneca\",\n\t\"parent_category\": \"62966efbc92882458c6bd632\"\n}"
      },
      "created": 1654025883866,
      "description": "",
      "headers": [
        {
          "id": "pair_c3e9da51b8294374b494ac879af532f1",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "isPrivate": false,
      "metaSortKey": -1654020877244,
      "method": "POST",
      "modified": 1654468314790,
      "name": "store",
      "parameters": [],
      "parentId": "fld_e7ae6f26fb2449f7afb666499f8f14e8",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/category/store"
    },
    {
      "_id": "fld_e7ae6f26fb2449f7afb666499f8f14e8",
      "_type": "request_group",
      "created": 1654025883864,
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1653867025994,
      "modified": 1654468309866,
      "name": "Category",
      "parentId": "wrk_c43ea4ea84454464a10051aab19fdfb7"
    },
    {
      "_id": "req_311f09e245e74882b0da68185b0afee2",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654025883868,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1654020877194,
      "method": "GET",
      "modified": 1654029990253,
      "name": "index",
      "parameters": [
        {
          "description": "",
          "id": "pair_54efe603abb74872abfbb0592c1f9035",
          "name": ":id",
          "value": "123"
        },
        {
          "description": "",
          "id": "pair_01abe2e556a4496f95a7dd588fd49dbb",
          "name": ":teste",
          "value": "123"
        }
      ],
      "parentId": "fld_e7ae6f26fb2449f7afb666499f8f14e8",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/category/{% pathParam ':id', '62967e9ff4f4870d50b60f82', '', true %}"
    },
    {
      "_id": "req_75cab8d272e442ecb735fadcc0070bf4",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654025883869,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1653943934970.5,
      "method": "GET",
      "modified": 1654468320537,
      "name": "show",
      "parameters": [],
      "parentId": "fld_e7ae6f26fb2449f7afb666499f8f14e8",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/category/show"
    },
    {
      "_id": "req_b07512caa31345ada3aa2247f0b2906e",
      "_type": "request",
      "authentication": {},
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"parent_category\": null\n}"
      },
      "created": 1654025883872,
      "description": "",
      "headers": [
        {
          "id": "pair_0bd4dae705384638a4508cbb718f8cb8",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "isPrivate": false,
      "metaSortKey": -1653943934945.5,
      "method": "PUT",
      "modified": 1654468324487,
      "name": "update",
      "parameters": [],
      "parentId": "fld_e7ae6f26fb2449f7afb666499f8f14e8",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/category/update/{% pathParam ':id', '62967e9ff4f4870d50b60f82', '', true %}"
    },
    {
      "_id": "req_1d3e1c90c32741138f120a304ac0f7f5",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654025883870,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1653943934920.5,
      "method": "DELETE",
      "modified": 1654468328230,
      "name": "delete",
      "parameters": [],
      "parentId": "fld_e7ae6f26fb2449f7afb666499f8f14e8",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/category/delete/{% pathParam ':id', '62967e9ff4f4870d50b60f82', '', true %}"
    },
    {
      "_id": "req_69e24aaa4df64bab87f29535ff89e433",
      "_type": "request",
      "authentication": {},
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"name\": \"Poster\",\n\t\"feedstock_id\": \"629d31ae09b3185af87d7379\",\n\t\"tags\": [\"Avatar\", \"Filme\", \"Anime\"]\n}"
      },
      "created": 1653866992747,
      "description": "",
      "headers": [
        {
          "id": "pair_087818b5082d4b8b99e3233f9ca07aa4",
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "isPrivate": false,
      "metaSortKey": -1654020877244,
      "method": "POST",
      "modified": 1654469990706,
      "name": "store",
      "parameters": [],
      "parentId": "fld_fcea98fb7bab4e9a89c83d42aafaeb51",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/product/store"
    },
    {
      "_id": "fld_fcea98fb7bab4e9a89c83d42aafaeb51",
      "_type": "request_group",
      "created": 1653867025969,
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1653867025969,
      "modified": 1653867025969,
      "name": "Product",
      "parentId": "wrk_c43ea4ea84454464a10051aab19fdfb7"
    },
    {
      "_id": "req_064be380884244e5aad0eec440d94d10",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654020877194,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1654020877194,
      "method": "GET",
      "modified": 1654468268786,
      "name": "index",
      "parameters": [
        {
          "description": "",
          "id": "pair_54efe603abb74872abfbb0592c1f9035",
          "name": ":id",
          "value": "123"
        },
        {
          "description": "",
          "id": "pair_01abe2e556a4496f95a7dd588fd49dbb",
          "name": ":teste",
          "value": "123"
        }
      ],
      "parentId": "fld_fcea98fb7bab4e9a89c83d42aafaeb51",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/product/{% pathParam ':id', '629d2d91beea871c605c649b', '', true %}"
    },
    {
      "_id": "req_6b4cafffb34a47a8903ab91256898cf6",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654020881010,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1653943934970.5,
      "method": "GET",
      "modified": 1654465846170,
      "name": "show",
      "parameters": [],
      "parentId": "fld_fcea98fb7bab4e9a89c83d42aafaeb51",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/product/show"
    },
    {
      "_id": "req_71abf513cd504b42b156cfef83da4c46",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654020911592,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1653943934945.5,
      "method": "PUT",
      "modified": 1654468297514,
      "name": "update",
      "parameters": [],
      "parentId": "fld_fcea98fb7bab4e9a89c83d42aafaeb51",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/product/{% pathParam ':id', '62967e9ff4f4870d50b60f82', '', true %}"
    },
    {
      "_id": "req_ce4879ee8dc24a73927c588f51e6e256",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654020897702,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1653943934920.5,
      "method": "DELETE",
      "modified": 1654468384476,
      "name": "delete",
      "parameters": [],
      "parentId": "fld_fcea98fb7bab4e9a89c83d42aafaeb51",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/product/delete/{% pathParam ':id', '629d2e566ac58e1584b62663', '', true %}"
    },
    {
      "_id": "req_84f0a5697e0f4c8da2e8cd1f47b06244",
      "_type": "request",
      "authentication": {},
      "body": {
        "mimeType": "multipart/form-data",
        "params": [
          {
            "description": "",
            "fileName": "E:\\Ecommerce\\Design\\[0] - Produtos\\[2] No Site\\Filmes & Séries\\Friends\\Canecas\\modelo novo 02\\caneca-branco-meio.jpg",
            "id": "pair_605451922a0349d09f64c0c3d5bb7d45",
            "name": "files",
            "type": "file",
            "value": ""
          },
          {
            "description": "",
            "disabled": false,
            "fileName": "C:\\Users\\mathe\\OneDrive\\Área de Trabalho\\caneca-branco-verso.webp",
            "id": "pair_dc91ecefe60d499ab7b0e2c4346b3f2c",
            "name": "files",
            "type": "file",
            "value": ""
          }
        ]
      },
      "created": 1654279955803,
      "description": "",
      "headers": [
        {
          "id": "pair_c3e9da51b8294374b494ac879af532f1",
          "name": "Content-Type",
          "value": "multipart/form-data"
        }
      ],
      "isPrivate": false,
      "metaSortKey": -1654020877244,
      "method": "POST",
      "modified": 1654463915459,
      "name": "store",
      "parameters": [],
      "parentId": "fld_cc133542f760424dbe578b2affe154f4",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/file/upload"
    },
    {
      "_id": "fld_cc133542f760424dbe578b2affe154f4",
      "_type": "request_group",
      "created": 1654279955800,
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1653867025944,
      "modified": 1654279955800,
      "name": "File",
      "parentId": "wrk_c43ea4ea84454464a10051aab19fdfb7"
    },
    {
      "_id": "req_8dc20f160ba6475cba393ab701923152",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654279955813,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1654020877194,
      "method": "GET",
      "modified": 1654379322104,
      "name": "index",
      "parameters": [
        {
          "description": "",
          "id": "pair_54efe603abb74872abfbb0592c1f9035",
          "name": ":id",
          "value": "123"
        },
        {
          "description": "",
          "id": "pair_01abe2e556a4496f95a7dd588fd49dbb",
          "name": ":teste",
          "value": "123"
        }
      ],
      "parentId": "fld_cc133542f760424dbe578b2affe154f4",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/file/caneca-branco-frente.webp"
    },
    {
      "_id": "req_f834aad3b16b4c45b587ebeca176dd11",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654279955815,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1653943934970.5,
      "method": "GET",
      "modified": 1654282208210,
      "name": "show",
      "parameters": [],
      "parentId": "fld_cc133542f760424dbe578b2affe154f4",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/file/list/all-file"
    },
    {
      "_id": "req_21be347f9c0647378d96f184f4b23331",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654279955817,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1653943934920.5,
      "method": "DELETE",
      "modified": 1654379200132,
      "name": "delete",
      "parameters": [],
      "parentId": "fld_cc133542f760424dbe578b2affe154f4",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": "{{ _.baseUrl }}/file/629a57a7ea79f943ecb69add"
    },
    {
      "_id": "req_04e4ad900ee145d7a2c496a4908d257f",
      "_type": "request",
      "authentication": {},
      "body": {},
      "created": 1654279955819,
      "description": "",
      "headers": [],
      "isPrivate": false,
      "metaSortKey": -1653943934870.5,
      "method": "PUT",
      "modified": 1654279955819,
      "name": "update",
      "parameters": [],
      "parentId": "fld_cc133542f760424dbe578b2affe154f4",
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingFollowRedirects": "global",
      "settingRebuildPath": true,
      "settingSendCookies": true,
      "settingStoreCookies": true,
      "url": ""
    },
    {
      "_id": "env_e454432706e63e32a57cf6f731f6d78485cdb2a7",
      "_type": "environment",
      "color": null,
      "created": 1653866992739,
      "data": {
        "baseUrl": "http://localhost:3550"
      },
      "dataPropertyOrder": {
        "&": [
          "baseUrl"
        ]
      },
      "isPrivate": false,
      "metaSortKey": 1653866992739,
      "modified": 1654037497736,
      "name": "Base Environment",
      "parentId": "wrk_c43ea4ea84454464a10051aab19fdfb7"
    },
    {
      "_id": "jar_e454432706e63e32a57cf6f731f6d78485cdb2a7",
      "_type": "cookie_jar",
      "cookies": [],
      "created": 1653866992743,
      "modified": 1653866992743,
      "name": "Default Jar",
      "parentId": "wrk_c43ea4ea84454464a10051aab19fdfb7"
    },
    {
      "_id": "spc_65eec33f5cb344f699c93f1fb38af85d",
      "_type": "api_spec",
      "contents": "openapi: 3.0.0\ninfo:\n  description: \"This is a sample server Petstore server.  You can find out more about\n    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\n    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key\n    `special-key` to test the authorization filters.\"\n  version: 1.0.2\n  title: Swagger Petstore\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\ntags:\n  - name: pet\n    description: Everything about your Pets\n    externalDocs:\n      description: Find out more\n      url: http://swagger.io\n  - name: store\n    description: Access to Petstore orders\n  - name: user\n    description: Operations about user\n    externalDocs:\n      description: Find out more about our store\n      url: http://swagger.io\npaths:\n  /pet:\n    post:\n      tags:\n        - pet\n      summary: Add a new pet to the store\n      description: \"\"\n      operationId: addPet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"405\":\n          description: Invalid input\n    put:\n      tags:\n        - pet\n      summary: Update an existing pet\n      description: \"\"\n      operationId: updatePet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n        \"405\":\n          description: Validation exception\n  /pet/findByStatus:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus\n      parameters:\n        - name: status\n          in: query\n          description: Status values that need to be considered for filter\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - available\n                - pending\n                - sold\n              default: available\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid status value\n  /pet/findByTags:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by tags\n      description: Multiple tags can be provided with comma separated strings. Use tag1,\n        tag2, tag3 for testing.\n      operationId: findPetsByTags\n      parameters:\n        - name: tags\n          in: query\n          description: Tags to filter by\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid tag value\n      deprecated: true\n  \"/pet/{petId}\":\n    get:\n      tags:\n        - pet\n      summary: Find pet by ID\n      description: Returns a single pet\n      operationId: getPetById\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n    post:\n      tags:\n        - pet\n      summary: Updates a pet in the store with form data\n      description: \"\"\n      operationId: updatePetWithForm\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet that needs to be updated\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Updated name of the pet\n                  type: string\n                status:\n                  description: Updated status of the pet\n                  type: string\n      responses:\n        \"405\":\n          description: Invalid input\n    delete:\n      tags:\n        - pet\n      summary: Deletes a pet\n      description: \"\"\n      operationId: deletePet\n      parameters:\n        - name: api_key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: petId\n          in: path\n          description: Pet id to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n  /store/inventory:\n    get:\n      tags:\n        - store\n      summary: Returns pet inventories by status\n      description: Returns a map of status codes to quantities\n      operationId: getInventory\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n                  format: int32\n  /store/order:\n    post:\n      tags:\n        - store\n      summary: Place an order for a pet\n      description: \"\"\n      operationId: placeOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Order\"\n        description: order placed for purchasing the pet\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid Order\n  \"/store/order/{orderId}\":\n    get:\n      tags:\n        - store\n      summary: Find purchase order by ID\n      description: For valid response try integer IDs with value >= 1 and <= 10. Other\n        values will generated exceptions\n      operationId: getOrderById\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of pet that needs to be fetched\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n            maximum: 10\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n    delete:\n      tags:\n        - store\n      summary: Delete purchase order by ID\n      description: For valid response try integer IDs with positive integer value. Negative\n        or non-integer values will generate API errors\n      operationId: deleteOrder\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of the order that needs to be deleted\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n  /user:\n    post:\n      tags:\n        - user\n      summary: Create user\n      description: This can only be done by the logged in user.\n      operationId: createUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Created user object\n        required: true\n      responses:\n        default:\n          description: successful operation\n  /user/createWithArray:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithArrayInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/createWithList:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithListInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/login:\n    get:\n      tags:\n        - user\n      summary: Logs user into the system\n      description: \"\"\n      operationId: loginUser\n      parameters:\n        - name: username\n          in: query\n          description: The user name for login\n          required: true\n          schema:\n            type: string\n        - name: password\n          in: query\n          description: The password for login in clear text\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          headers:\n            X-Rate-Limit:\n              description: calls per hour allowed by the user\n              schema:\n                type: integer\n                format: int32\n            X-Expires-After:\n              description: date in UTC when token expires\n              schema:\n                type: string\n                format: date-time\n          content:\n            application/xml:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Invalid username/password supplied\n  /user/logout:\n    get:\n      tags:\n        - user\n      summary: Logs out current logged in user session\n      description: \"\"\n      operationId: logoutUser\n      responses:\n        default:\n          description: successful operation\n  \"/user/{username}\":\n    get:\n      tags:\n        - user\n      summary: Get user by user name\n      description: \"\"\n      operationId: getUserByName\n      parameters:\n        - name: username\n          in: path\n          description: \"The name that needs to be fetched. Use user1 for testing. \"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\n    put:\n      tags:\n        - user\n      summary: Updated user\n      description: This can only be done by the logged in user.\n      operationId: updateUser\n      parameters:\n        - name: username\n          in: path\n          description: name that need to be updated\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Updated user object\n        required: true\n      responses:\n        \"400\":\n          description: Invalid user supplied\n        \"404\":\n          description: User not found\n    delete:\n      tags:\n        - user\n      summary: Delete user\n      description: This can only be done by the logged in user.\n      operationId: deleteUser\n      parameters:\n        - name: username\n          in: path\n          description: The name that needs to be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n  - url: https://petstore.swagger.io/v2\ncomponents:\n  requestBodies:\n    UserArray:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/User\"\n      description: List of user object\n      required: true\n    Pet:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n      description: Pet object that needs to be added to the store\n      required: true\n  schemas:\n    Order:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        petId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n        shipDate:\n          type: string\n          format: date-time\n        status:\n          type: string\n          description: Order Status\n          enum:\n            - placed\n            - approved\n            - delivered\n        complete:\n          type: boolean\n          default: false\n      xml:\n        name: Order\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        userStatus:\n          type: integer\n          format: int32\n          description: User Status\n      xml:\n        name: User\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Category\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Tag\n    Pet:\n      type: object\n      required:\n        - name\n        - photoUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: \"#/components/schemas/Category\"\n        name:\n          type: string\n          example: doggie\n        photoUrls:\n          type: array\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n        tags:\n          type: array\n          xml:\n            name: tag\n            wrapped: true\n          items:\n            $ref: \"#/components/schemas/Tag\"\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n      xml:\n        name: Pet\n    ApiResponse:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        type:\n          type: string\n        message:\n          type: string",
      "contentType": "yaml",
      "created": 1653866992734,
      "fileName": "Oracule-Api",
      "modified": 1654036568553,
      "parentId": "wrk_c43ea4ea84454464a10051aab19fdfb7"
    },
    {
      "_id": "uts_37b98dec526b4ec6ae2e4e67640056bd",
      "_type": "unit_test_suite",
      "created": 1653866992749,
      "modified": 1653866992749,
      "name": "Example Test Suite",
      "parentId": "wrk_c43ea4ea84454464a10051aab19fdfb7"
    }
  ]
}
